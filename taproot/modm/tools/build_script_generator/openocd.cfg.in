%% for path in collector_values["path.openocd"] | sort
add_script_search_dir {{ path | modm.windowsify(escape_level=1) }}
%% endfor
%# Include the users config before the modm config
%% if openocd_user_path is defined
source [find {{ openocd_user_path | modm.windowsify(escape_level=1) }}]
%% endif
%% for file in collector_values["openocd.source"] | sort
source [find {{ file | modm.windowsify(escape_level=1) }}]
%% endfor

proc modm_itm_log { OUTPUT F_CPU {BAUDRATE 2000000} } {
	tpiu create itm.tpiu -dap [dap names] -ap-num 0 -protocol uart
	itm.tpiu configure -traceclk $F_CPU -pin-freq $BAUDRATE -output $OUTPUT
	itm.tpiu enable
	tpiu init
	itm port 0 on
}

proc modm_program { SOURCE } {
	program $SOURCE verify
	reset run
	shutdown
}

%% if has_rtt
proc modm_rtt { {POLLING 1} {CHANNELS {{rtt_channels}}} } {
	rtt setup 0x{{"%0x" % main_ram.start}} {{main_ram.size}} "modm.rtt.modm"
	rtt start
	rtt polling_interval $POLLING
	for {set i 0} {$i < $CHANNELS} {incr i} {
		rtt server start [expr {9090 + $i}] $i
	}
}
%% endif

init
