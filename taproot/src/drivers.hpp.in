/*
 * Copyright (c) 2020-2021 Advanced Robotics at the University of Washington <robomstr@uw.edu>
 *
 * This file is part of Taproot.
 *
 * Taproot is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Taproot is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Taproot.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifndef TAP_DRIVERS_HPP_
#define TAP_DRIVERS_HPP_

#if defined(PLATFORM_HOSTED) && defined(ENV_UNIT_TESTS)
%% for include in mock_driver_includes
#include "{{ include }}"
%% endfor
#include "tap/mock/command_scheduler_mock.hpp"
#else
%% for include in src_driver_includes
#include "{{ include }}"
%% endfor
#include "tap/control/command_scheduler.hpp"
#endif

namespace tap
{
class Drivers
{
    friend class DriversSingleton;

#ifdef ENV_UNIT_TESTS
public:
#else
protected:
#endif
    Drivers()
%% for object_and_mock in object_and_mocks
        {% if loop.first %}:{% else %} {% endif%} {{ object_and_mock["object-instance-name"] }}({{ object_and_mock["constructor"] }}),
%% endfor
#ifdef ENV_UNIT_TESTS
          commandScheduler(this)
#else
          commandScheduler(this, true)
#endif
          {}

#if defined(PLATFORM_HOSTED) && defined(ENV_UNIT_TESTS)
%% for object_and_mock in object_and_mocks
    {{ object_and_mock["mock-object-name"] }} {{ object_and_mock["object-instance-name"] }};
%% endfor
    testing::NiceMock<mock::CommandSchedulerMock> commandScheduler;
#else
public:
%% for object_and_mock in object_and_mocks
    {{ object_and_mock["object-name"] }} {{ object_and_mock["object-instance-name"] }};
%% endfor
    control::CommandScheduler commandScheduler;
#endif
};  // class Drivers

}  // namespace tap

#endif  // TAP_DRIVERS_HPP_

