# Copyright (c) 2020-2021 Advanced Robotics at the University of Washington <robomstr@uw.edu>
#
# This file is part of Taproot.
#
# Taproot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Taproot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Taproot.  If not, see <https://www.gnu.org/licenses/>.

import subprocess

import sys
sys.path.append(repopath("scripts/lbuild-helpers"))

from hosted_platforms import ALL_HOSTED_TARGET_NAMES

def init(repo):
    repo.name = "taproot"
    repo.description = "Robot-independent control system code generation for the RoboMaster robotics competition"

    repo.add_option(
        StringOption(
            name="project_name",
            default="mcb-project",
            description="Project name"))
    repo.add_option(
        StringOption(
            name="modm_repo_lb",
            default="../modm/repo.lb",
            description="Path to repo.lb file, relative to your project.xml file"))

    repo.add_option(
        BooleanOption(
            name="rebuild_modm",
            default=True,
            description="Whether or not to rebuild modm HALs"))

    repo.add_option(
        EnumerationOption(
            name="dev_board",
            description="Which development board to be used",
            enumeration=["rm-dev-board-a", "rm-dev-board-c"]))

def prepare(repo, options):
    repo.add_modules_recursive("./src", modulefile="*.lb")
    repo.add_modules_recursive("./test", modulefile="*.lb")
    repo.add_modules_recursive("./build_tools", modulefile="*.lb")
    repo.add_modules_recursive("./modm_project_files", modulefile="*.lb")
    repo.add_modules_recursive("./docs", modulefile="*.lb")

def build(env):
    if env[":rebuild_modm"]:
        print("building modm")
        try:
            subprocess.run(["lbuild", "build"], check=True, cwd="taproot")
        except subprocess.CalledProcessError as e:
            print(e)
            exit(1)

        print("building sim-modm")
        try:
            for target in ALL_HOSTED_TARGET_NAMES:
                subprocess.run(["lbuild", "build"], check=True, cwd=f"taproot/sim-modm/{target}")
        except subprocess.CalledProcessError as e:
            print(e)
            exit(1)
